{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"HALLO! Web berisikan tugas mata kuliah Komputasi Numerik dengan Dosen Pengampu Bapak Mula'ab, S.Si, M.Kom. Perkenalkan NAMA : WARDA MILANA MAYA NIM : 180411100155 `KELAS : KOMPUTASI NUMERIK A PRODI : TEKNIK INFORMATIKA","title":"HALLO!"},{"location":"#hallo","text":"Web berisikan tugas mata kuliah Komputasi Numerik dengan Dosen Pengampu Bapak Mula'ab, S.Si, M.Kom.","title":"HALLO!"},{"location":"#perkenalkan","text":"NAMA : WARDA MILANA MAYA NIM : 180411100155 `KELAS : KOMPUTASI NUMERIK A PRODI : TEKNIK INFORMATIKA","title":"Perkenalkan"},{"location":"maclauren/","text":"DEFINISI? Deret MacLaurin merupakan suatu fungsi f(x) yang memiliki turunan f'(x), f\u201d(x), f\u201d'(x), dan seterusnya yang kontinyu dalam interval I dan a, x I maka untuk x disekitar a yaitu |x \u2013 a| < , f(x) dapat diekspansi kedalam Deret Taylor. Deret Maclaurin adalah bagian deret Taylor, dengan kata lain, deret Taylor yang berpusat di nol disebut dengan deret Maclaurin. Deret MacLaurin disebut juga Deret Taylor Baku. Berikut formulanya : TUGAS Mengekspansi bilangan e^2x dengan nilai x=4 hingga nilai menjadi kurang dari 0,001 dengan listing program . Listing Program : import math x=4 ex=1 a=0 b=1 iter=1 while ex>0.001: f_x=0 f_y=0 for i in range (a): f_x += (2**i)*x**i/math.factorial(i) for j in range (b): f_y += (2**j)*x**j/math.factorial(j) ex=f_y-f_x a+=1 b+=1 print(\"iterasi ke-\",iter,\"= \",ex) iter+=1 output : iterasi ke- 1 = 1.0 iterasi ke- 2 = 8.0 iterasi ke- 3 = 32.0 iterasi ke- 4 = 85.33333333333333 iterasi ke- 5 = 170.66666666666669 iterasi ke- 6 = 273.0666666666666 iterasi ke- 7 = 364.08888888888896 iterasi ke- 8 = 416.1015873015872 iterasi ke- 9 = 416.1015873015872 iterasi ke- 10 = 369.8680776014112 iterasi ke- 11 = 295.89446208112895 iterasi ke- 12 = 215.195972422639 iterasi ke- 13 = 143.46398161509296 iterasi ke- 14 = 88.28552714774924 iterasi ke- 15 = 50.448872655856576 iterasi ke- 16 = 26.90606541645684 iterasi ke- 17 = 13.45303270822842 iterasi ke- 18 = 6.330838921519444 iterasi ke- 19 = 2.8137061873417224 iterasi ke- 20 = 1.184718394670199 iterasi ke- 21 = 0.47388735786807956 iterasi ke- 22 = 0.18052851728316455 iterasi ke- 23 = 0.06564673355751438 iterasi ke- 24 = 0.022833646454728296 iterasi ke- 25 = 0.0076112154847578495 iterasi ke- 26 = 0.0024355889549951826 iterasi ke- 27 = 0.0007494119863622473","title":"Maclauren"},{"location":"maclauren/#definisi","text":"Deret MacLaurin merupakan suatu fungsi f(x) yang memiliki turunan f'(x), f\u201d(x), f\u201d'(x), dan seterusnya yang kontinyu dalam interval I dan a, x I maka untuk x disekitar a yaitu |x \u2013 a| < , f(x) dapat diekspansi kedalam Deret Taylor. Deret Maclaurin adalah bagian deret Taylor, dengan kata lain, deret Taylor yang berpusat di nol disebut dengan deret Maclaurin. Deret MacLaurin disebut juga Deret Taylor Baku. Berikut formulanya :","title":"DEFINISI?"},{"location":"maclauren/#tugas","text":"Mengekspansi bilangan e^2x dengan nilai x=4 hingga nilai menjadi kurang dari 0,001 dengan listing program . Listing Program : import math x=4 ex=1 a=0 b=1 iter=1 while ex>0.001: f_x=0 f_y=0 for i in range (a): f_x += (2**i)*x**i/math.factorial(i) for j in range (b): f_y += (2**j)*x**j/math.factorial(j) ex=f_y-f_x a+=1 b+=1 print(\"iterasi ke-\",iter,\"= \",ex) iter+=1 output : iterasi ke- 1 = 1.0 iterasi ke- 2 = 8.0 iterasi ke- 3 = 32.0 iterasi ke- 4 = 85.33333333333333 iterasi ke- 5 = 170.66666666666669 iterasi ke- 6 = 273.0666666666666 iterasi ke- 7 = 364.08888888888896 iterasi ke- 8 = 416.1015873015872 iterasi ke- 9 = 416.1015873015872 iterasi ke- 10 = 369.8680776014112 iterasi ke- 11 = 295.89446208112895 iterasi ke- 12 = 215.195972422639 iterasi ke- 13 = 143.46398161509296 iterasi ke- 14 = 88.28552714774924 iterasi ke- 15 = 50.448872655856576 iterasi ke- 16 = 26.90606541645684 iterasi ke- 17 = 13.45303270822842 iterasi ke- 18 = 6.330838921519444 iterasi ke- 19 = 2.8137061873417224 iterasi ke- 20 = 1.184718394670199 iterasi ke- 21 = 0.47388735786807956 iterasi ke- 22 = 0.18052851728316455 iterasi ke- 23 = 0.06564673355751438 iterasi ke- 24 = 0.022833646454728296 iterasi ke- 25 = 0.0076112154847578495 iterasi ke- 26 = 0.0024355889549951826 iterasi ke- 27 = 0.0007494119863622473","title":"TUGAS"},{"location":"newton raphson/","text":"NEWTON RAPHSON adalah... Metode pendekatan yang menggunakan satu titik awal dn mendekatinya dengan memperhatikan slope atau gradien titik tersebut. Titik pendekatan ke n+1 dituliskan dengan : formulanya : Garis singgung terhadap fungsi pada Xn[yakni f'(Xn)] diekstrapolasikan kebawah terhadap sumbu x untuk memberikan sebuah taksiran akar pada Xn+1. ALGORITMA : Definisikan fungsi f(x) dan f1(x) Tentukan toleransi error (e) dan iterasi maksimum (n) Tentukan nilai pendekatan awal Xo Hitung f(Xo) dan f1(Xo) Untuk iterasi I = 1 s/d n atau |f(xi)|e>= Hitung f(Xi) dan f1(Xi) Akar persamaan adalah nilai xi yang terakhir diperoleh. Algoritma Metode Newton Raphson dengan modifikasi tabel Definisikan fungsi F(x) ambil range nilai x = [a,b], dengan jumlah pembagi n Masukkan torelansi error (e) dan masukkan iterasi n Gunakan algoritma tabel diperoleh titik pendekatan awal Xo dari : F(Xk) . F(Xk+1)<0 maka Xo = Xk Hitung F(Xo) dan F1(Xo) Bila F( abs (F^1 (Xo))) < e, maka pendekatan awal Xo digeser sebesar dx Xo = Xo + dx hitung F(Xo) dan F1(Xo) Untuk iterasi I= 1 s/d n atau |F(xi)| e \u2265 hitung F(Xi) dan F1(xi) bila |F1(Xi)| < e maka \u200b Xi = Xi + dx hitung F(Xi) dan F1(Xo) Akar persamaan adalah x terakhir yang diperoleh. Dengan menggunakan algoritma Newton Raphson yang dimodifikasikan diharapkan akar yang diperoleh sesuai dengan harapan dan bila terdapat lebih dari satu akar dalam range ditunjuk, akan ditampilkan semuanya. ###### TUGAS! Membuat program Newton Raphson pada fungsi persamaan non linier.","title":"Newton raphson"},{"location":"newton raphson/#newton-raphson-adalah","text":"Metode pendekatan yang menggunakan satu titik awal dn mendekatinya dengan memperhatikan slope atau gradien titik tersebut. Titik pendekatan ke n+1 dituliskan dengan : formulanya : Garis singgung terhadap fungsi pada Xn[yakni f'(Xn)] diekstrapolasikan kebawah terhadap sumbu x untuk memberikan sebuah taksiran akar pada Xn+1.","title":"NEWTON RAPHSON adalah..."},{"location":"newton raphson/#algoritma","text":"Definisikan fungsi f(x) dan f1(x) Tentukan toleransi error (e) dan iterasi maksimum (n) Tentukan nilai pendekatan awal Xo Hitung f(Xo) dan f1(Xo) Untuk iterasi I = 1 s/d n atau |f(xi)|e>= Hitung f(Xi) dan f1(Xi) Akar persamaan adalah nilai xi yang terakhir diperoleh. Algoritma Metode Newton Raphson dengan modifikasi tabel Definisikan fungsi F(x) ambil range nilai x = [a,b], dengan jumlah pembagi n Masukkan torelansi error (e) dan masukkan iterasi n Gunakan algoritma tabel diperoleh titik pendekatan awal Xo dari : F(Xk) . F(Xk+1)<0 maka Xo = Xk Hitung F(Xo) dan F1(Xo) Bila F( abs (F^1 (Xo))) < e, maka pendekatan awal Xo digeser sebesar dx Xo = Xo + dx hitung F(Xo) dan F1(Xo) Untuk iterasi I= 1 s/d n atau |F(xi)| e \u2265 hitung F(Xi) dan F1(xi) bila |F1(Xi)| < e maka \u200b Xi = Xi + dx hitung F(Xi) dan F1(Xo) Akar persamaan adalah x terakhir yang diperoleh. Dengan menggunakan algoritma Newton Raphson yang dimodifikasikan diharapkan akar yang diperoleh sesuai dengan harapan dan bila terdapat lebih dari satu akar dalam range ditunjuk, akan ditampilkan semuanya. ###### TUGAS! Membuat program Newton Raphson pada fungsi persamaan non linier.","title":"ALGORITMA :"},{"location":"recursive trapezoid/","text":"Pengertian Trapesium Rekursif merupakan suatu metode pengintegralan dalam analisis numerik.di dalam Kalkulus, integral tentu didefinisikan sebagai sebuah limit jumlah Riemann.Selanjutnya,menurut Teorema Dasar Kalkulusintegral tersebut dapat dihitung dengan rumus, {\\displaystyle \\int _{a}^{b}f(x)\\,dx=F(b)-F(a)} Dengan F(x) adalah antiderivatif f(x) (yakni F\u2019(x)=f(x) ). Banyak integral tentu yang dapat dihitung dengan rumus tesebut, namun demikian, tidak sedikit integral tentu yang tidak dapat dihitung dengan rumus di atas, hal itu dikarenakan integran f(x) tidak mempunyai antiderivatif yang dapat dinyatakan dalam fungsi-fungsi elementer. Dalam hal ini perhitungan yang dapat dilakukan adalah secara numerik. Integrasi numerik merupakan suatu alat utama yang digunakan para ilmuwan untuk mendapatkan nilai-nilai hampiran untuk integral tentu yang tidak dapat diselesaikan secara analitik. Dalam mendapatkan nilai-nilai hampiran integral tentu, digunakan banyak metode, salah satu metode yang dapat digunakan adalah Aturan Trapesium Rekursif. code program def fungsi (x) : y = 1/(1+x) return y print(\"f(x) = 1/(1+x)\") a = float(input(\"Masukkan batas bawah integral : \")) b = float(input(\"Masukkan batas atas integral : \")) print(\"iterasi\",\"n\",\"trapesium\") for iterasi in range (1,16,1): n=2*iterasi h=(b-a)/n xi = a y = 0 for i in range(1,n): xi = xi+h y += fungsi(xi) hasil = (h)*((fungsi(a)+(2*y)+fungsi(b))/2) print (iterasi,n,hasil) Ouput : f(x) = 1/(1+x) Masukkan batas bawah integral : 2 Masukkan batas atas integral : 3 iterasi n trapesium 1 2 0.28869047619047616 2 4 0.2879349816849817 3 6 0.28779454400163784 4 8 0.2877453510163465 5 10 0.2877225746826515 6 12 0.28771020049170193 7 14 0.2877027386110822 8 16 0.28769789530831674 9 18 0.28769457463975956 10 20 0.2876921993271122 11 22 0.2876904418332646 12 24 0.2876891050973386 13 26 0.2876880647918689 14 28 0.2876872393347254 15 30 0.2876865733937683","title":"Recursive trapezoid"},{"location":"recursive trapezoid/#pengertian","text":"Trapesium Rekursif merupakan suatu metode pengintegralan dalam analisis numerik.di dalam Kalkulus, integral tentu didefinisikan sebagai sebuah limit jumlah Riemann.Selanjutnya,menurut Teorema Dasar Kalkulusintegral tersebut dapat dihitung dengan rumus, {\\displaystyle \\int _{a}^{b}f(x)\\,dx=F(b)-F(a)} Dengan F(x) adalah antiderivatif f(x) (yakni F\u2019(x)=f(x) ). Banyak integral tentu yang dapat dihitung dengan rumus tesebut, namun demikian, tidak sedikit integral tentu yang tidak dapat dihitung dengan rumus di atas, hal itu dikarenakan integran f(x) tidak mempunyai antiderivatif yang dapat dinyatakan dalam fungsi-fungsi elementer. Dalam hal ini perhitungan yang dapat dilakukan adalah secara numerik. Integrasi numerik merupakan suatu alat utama yang digunakan para ilmuwan untuk mendapatkan nilai-nilai hampiran untuk integral tentu yang tidak dapat diselesaikan secara analitik. Dalam mendapatkan nilai-nilai hampiran integral tentu, digunakan banyak metode, salah satu metode yang dapat digunakan adalah Aturan Trapesium Rekursif.","title":"Pengertian"},{"location":"recursive trapezoid/#code-program","text":"def fungsi (x) : y = 1/(1+x) return y print(\"f(x) = 1/(1+x)\") a = float(input(\"Masukkan batas bawah integral : \")) b = float(input(\"Masukkan batas atas integral : \")) print(\"iterasi\",\"n\",\"trapesium\") for iterasi in range (1,16,1): n=2*iterasi h=(b-a)/n xi = a y = 0 for i in range(1,n): xi = xi+h y += fungsi(xi) hasil = (h)*((fungsi(a)+(2*y)+fungsi(b))/2) print (iterasi,n,hasil) Ouput : f(x) = 1/(1+x) Masukkan batas bawah integral : 2 Masukkan batas atas integral : 3 iterasi n trapesium 1 2 0.28869047619047616 2 4 0.2879349816849817 3 6 0.28779454400163784 4 8 0.2877453510163465 5 10 0.2877225746826515 6 12 0.28771020049170193 7 14 0.2877027386110822 8 16 0.28769789530831674 9 18 0.28769457463975956 10 20 0.2876921993271122 11 22 0.2876904418332646 12 24 0.2876891050973386 13 26 0.2876880647918689 14 28 0.2876872393347254 15 30 0.2876865733937683","title":"code program"}]}